{"version":3,"file":"static/js/266.d32b8db2.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.js","helpers/API/API.js","pages/Home.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className=\"Loader\">\n      <Audio\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '1ff5f9e57945bfb0ff78aaaf0ecf4ac6';\n\nconst params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get('trending/movie/week', { params });\n  return data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}`, { params });\n  return response.data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/credits`, { params });\n  return data.cast;\n};\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}/reviews`, {\n    params: {\n      ...params,\n      page: 1,\n    },\n  });\n  return data.results;\n};\n\nexport const fetchSearchMovie = async query => {\n  const response = await axios.get('search/movie', {\n    params: {\n      ...params,\n      query,\n      include_adult: true,\n      page: 1,\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\n\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport { fetchTrendingMovies } from 'helpers/API/API';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const getTrendingMovies = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const fetchedTrendingMovies = await fetchTrendingMovies({\n          signal: abortController.signal,\n        });\n        setMovies(fetchedTrendingMovies);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getTrendingMovies();\n\n    return () => abortController.abort();\n  }, []);\n\n  return (\n    <>\n      <h1>Weekly trending movies:</h1>\n      {loading && <Loader />}\n      {error && <p>Error loading movies. Please try again later.</p>}\n      {!loading && movies?.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["_jsx","className","children","Audio","height","width","radius","color","ariaLabel","_ref","movies","location","useLocation","map","_ref2","id","title","Link","to","concat","state","from","axios","params","api_key","language","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","sent","abrupt","results","stop","apply","arguments","fetchMovieDetails","_callee2","movieId","response","_context2","_x","fetchMovieCast","_ref3","_callee3","_yield$axios$get2","_context3","cast","_x2","fetchMovieReviews","_ref4","_callee4","_yield$axios$get3","_context4","_objectSpread","page","_x3","fetchSearchMovie","_ref5","_callee5","query","_context5","include_adult","_x4","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","abortController","AbortController","getTrendingMovies","fetchedTrendingMovies","signal","t0","message","finish","abort","_jsxs","_Fragment","Loader","length","MoviesList"],"sourceRoot":""}